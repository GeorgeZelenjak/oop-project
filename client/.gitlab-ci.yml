image: adoptopenjdk/openjdk14:jdk-14.0.2_12

stages:
  - build
  - validate
  - test
  - visualize
  - release

variables:
  # Disable the Gradle daemon to ensure isolated runs of the CI pipeline.
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

client-build:
  stage: build
  script:
    ./gradlew --build-cache :client:assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build/
      - .gradle/

client-checkstyle:
  stage: validate
  script: ./gradlew :client:checkstyleMain :client:checkstyleTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build/
      - .gradle/
  allow_failure: true

client-test:
  stage: test
  script:
    - ./gradlew :client:test :client:jacocoTestReport
    - cat client/build/reports/jacoco/html/index.html | grep -Po "Total.*?([0-9]{1,3})%"
  coverage: /([0-9]{1,3})%/
  artifacts:
    when: always
    reports:
      junit: client/build/test-results/test/TEST-*.xml
    paths:
      - client/build/jacoco/jacoco.xml

client-coverage:
  stage: visualize
  image: haynes/jacoco2cobertura:1.0.4
  script:
    # convert report from jacoco to cobertura
    - 'python /opt/cover2cover.py client/build/jacoco/jacoco.xml client/src/main/java > client/build/cobertura.xml'
    # read the <source></source> tag and prepend the path to every filename attribute
    - 'python /opt/source2filename.py client/build/cobertura.xml'
  needs: ["client-test"]
  dependencies:
    - client-test
  artifacts:
    reports:
      cobertura: client/build/cobertura.xml


client-release:
    allow_failure: true
    stage: release
    rules:
      - if: $CI_COMMIT_TAG                  # Run this job when a tag is created manually
    script:
      - echo 'running release_job'
      - ./gradlew :client:distTar :client:distZip :client:fatJar
    cache:
      paths:
        - build/
        - .gradle/
    artifacts:
      paths:
        - client/build/libs/client-AIO.jar